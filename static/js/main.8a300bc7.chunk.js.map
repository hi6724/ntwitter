{"version":3,"sources":["fBase.js","style/NweetStyle.js","components/Nweet.js","style/HomeStyle.js","style/OtherProfileStyle.js","routes/OthersProfile.js","style/AuthStyle.js","style/ProfileStyle.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Color.js","style/NweetFactoryStyle.js","components/NweetFactory.js","routes/Home.js","components/Demo.js","style/NavStyle.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","StyledNweet","styled","div","Button11","button","ProfileImage","img","ShowButton","EditButton","props","showEdit","EditButtons","TextContainer","NweetName","span","NweetText","Nweet","nweetObj","isOwner","userObj","useForm","register","getValues","handleSubmit","useState","photoURL","setPhotoURL","setShowEdit","displayName","setDisplayName","editing","setEditing","useEffect","getPhoto","onDeleteClick","a","window","confirm","attachmentUrl","deleteObject","ref","deleteDoc","doc","id","query","collection","where","uid","userQuery","getDocs","userSnapShot","updateDoc","docs","nweets","data","filter","nweet","createdAt","onSubmit","text","map","creatorId","userPhotoURL","userDisplayName","to","src","value","type","placeholder","onClick","prev","ControlButton","Container","ButtonContainer","OtherProfileDiv","OtherProfile","nweetArray","setNweets","page","setPage","useParams","handleClick","e","scrollTo","target","length","getNweets","orderBy","limit","q","documentSnapshots","lastVisible","startAfter","onSnapshot","snapShot","width","Form","form","AuthInput","input","SubmitButton","Button31","ProfileLayout","UpdateButton","LogoutButton","Label","label","Profile","refreshUser","setValue","console","log","photoUrl","tempPhoto","setTempPhoto","history","useHistory","onLogOutClick","signOut","push","location","reload","getMyNweets","newDisplayName","profilePhoto","newProfileUrl","newProfileUrlRef","uploadBytes","getDownloadURL","updateProfile","currentUser","htmlFor","maxLength","onChange","event","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Error","h4","AuthForm","newAccount","setNewAccount","error","setError","email","password","createUserWithEmailAndPassword","addDoc","user","split","signInWithEmailAndPassword","message","required","className","Button","ButtonBox","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","getAdditionalUserInfo","isNewUser","icon","faTwitter","color","size","name","faGoogle","faGithub","Attachment","NweetFacotry","attachment","setAttachment","photo","alert","attachmentRef","uuidv4","Date","now","creatorName","onClearAttachment","faImage","Home","setUserSnapShot","getUserSnapShot","Demo","image","setImage","cropData","setCropData","cropper","setCropper","style","preventDefault","dataTransfer","onload","height","zoomTo","initialAspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","instance","guides","float","getCroppedCanvas","toDataURL","alt","clear","Nav","Navigation","Body","AppRouter","isLoggedIn","exact","path","GlobalStyles","createGlobalStyle","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a300bc7.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC6d2rzFtMpx6Y3k-usaOOK2onpxyN1mmU\",\r\n  authDomain: \"ntwitter-8313d.firebaseapp.com\",\r\n  projectId: \"ntwitter-8313d\",\r\n  storageBucket: \"ntwitter-8313d.appspot.com\",\r\n  messagingSenderId: \"135453840930\",\r\n  appId: \"1:135453840930:web:735c0d5f669e53cd9a5c7b\",\r\n};\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage(firebaseApp);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNweet = styled.div`\r\n  display: flex;\r\n  background-color: white;\r\n  position: relative;\r\n  outline: none;\r\n  padding: 12px 5px;\r\n  margin: 12px 0px;\r\n  border-radius: 12px;\r\n  border: 2px solid white;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.5s;\r\n  > div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Button11 = styled.button`\r\n  appearance: button;\r\n  background-color: #1899d6;\r\n  border: solid transparent;\r\n  border-radius: min(16px, 3vw);\r\n  border-width: 0 0 min(4px, 0.8vw);\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: din-round, sans-serif;\r\n  font-size: min(12px, 2vw);\r\n  font-weight: 700;\r\n  letter-spacing: 0.8px;\r\n  line-height: min(20px, 4vw);\r\n  margin: 0;\r\n  outline: none;\r\n  overflow: visible;\r\n  padding: 3px min(16px, 3vw);\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  touch-action: manipulation;\r\n  transform: translateZ(0);\r\n  transition: filter 0.2s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  /* width: 100%; */\r\n  :after {\r\n    background-clip: padding-box;\r\n    background-color: #1cb0f6;\r\n    border: solid transparent;\r\n    border-radius: 16px;\r\n    border-width: 0 0 4px;\r\n    bottom: -4px;\r\n    content: \"\";\r\n    left: 0;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: -1;\r\n  }\r\n  :main,\r\n  :focus {\r\n    user-select: auto;\r\n  }\r\n  :hover:not(:disabled) {\r\n    filter: brightness(1.1);\r\n  }\r\n  :disabled {\r\n    cursor: auto;\r\n  }\r\n`;\r\n\r\nexport const ProfileImage = styled.img`\r\n  width: 50px;\r\n  border-radius: 50%;\r\n`;\r\nexport const ShowButton = styled(Button11)``;\r\nexport const EditButton = styled(Button11)`\r\n  display: ${(props) => (props.showEdit ? \"block\" : \"none\")};\r\n`;\r\nexport const EditButtons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  /* transform: translateX(370px); */\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  img {\r\n    margin-top: 15px;\r\n    width: 100%;\r\n    border-radius: 15px;\r\n    max-height: 500px;\r\n  }\r\n  input[type=\"text\"] {\r\n    font-size: 16px;\r\n    margin-left: 12px;\r\n  }\r\n`;\r\nexport const NweetName = styled.span`\r\n  display: inline-block;\r\n  font-weight: 600;\r\n  margin-left: 12px;\r\n  max-width: 100px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\nexport const NweetText = styled.span`\r\n  margin-left: 12px;\r\n`;\r\n","import { getAuth } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ProfileDisplayName,\r\n  ProfileImage,\r\n  ProfileImageContainer,\r\n  StyledNweet,\r\n  TextContainer,\r\n  NweetText,\r\n  NweetName,\r\n  EditButtons,\r\n  ShowButton,\r\n  EditButton,\r\n  Editing,\r\n} from \"style/NweetStyle\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\r\n  const { register, getValues, handleSubmit } = useForm();\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [editing, setEditing] = useState(false);\r\n  useEffect(() => {\r\n    getPhoto();\r\n  }, []);\r\n  // creatorId 이용해서 User 리턴받고 PhotoUrl 얻기\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      nweetObj.attachmentUrl &&\r\n        (await deleteObject(ref(storageService, nweetObj.attachmentUrl)));\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      //user 안에 있는 nweets array 에서 지우기\r\n      const userQuery = await query(\r\n        collection(dbService, \"user\"),\r\n        where(\"uid\", \"==\", userObj.uid)\r\n      );\r\n      const userSnapShot = await getDocs(userQuery);\r\n\r\n      await updateDoc(doc(dbService, `user/${userSnapShot.docs[0].id}`), {\r\n        nweets: userSnapShot.docs[0]\r\n          .data()\r\n          .nweets.filter((nweet) => nweet.createdAt !== nweetObj.createdAt),\r\n      });\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: getValues(\"newNweet\"),\r\n    });\r\n\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", userObj.uid)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n\r\n    await updateDoc(doc(dbService, `user/${userSnapShot.docs[0].id}`), {\r\n      nweets: userSnapShot.docs[0].data().nweets.map((nweet) => {\r\n        if (nweet.createdAt === nweetObj.createdAt) {\r\n          nweet.text = getValues(\"newNweet\");\r\n        }\r\n        return nweet;\r\n      }),\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const getPhoto = async () => {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", nweetObj.creatorId)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n    const userPhotoURL = userSnapShot.docs[0].data().photoURL;\r\n    const userDisplayName = userSnapShot.docs[0].data().displayName;\r\n    setDisplayName(userDisplayName);\r\n    setPhotoURL(userPhotoURL);\r\n  };\r\n  const onShowClick = () => {\r\n    setShowEdit((prev) => {\r\n      if (prev) {\r\n        setEditing(false);\r\n      }\r\n      return !prev;\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledNweet>\r\n        <Link to={isOwner ? \"/profile\" : nweetObj.creatorId}>\r\n          <ProfileImage src={photoURL} />\r\n        </Link>\r\n        <div>\r\n          <TextContainer>\r\n            <NweetName>{displayName}</NweetName>\r\n            {editing ? (\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                  id=\"editNweet\"\r\n                  {...register(\"newNweet\", { value: nweetObj.text })}\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                />\r\n              </form>\r\n            ) : (\r\n              <NweetText>{nweetObj.text}</NweetText>\r\n            )}\r\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          </TextContainer>\r\n          {isOwner && (\r\n            <EditButtons showEdit={showEdit}>\r\n              <ShowButton onClick={onShowClick} showEdit={showEdit}>\r\n                {showEdit ? \"Calcel\" : \"Edit\"}\r\n              </ShowButton>\r\n              <EditButton showEdit={showEdit} onClick={onDeleteClick}>\r\n                Delete Nweet\r\n              </EditButton>\r\n              <EditButton showEdit={showEdit} onClick={toggleEditing}>\r\n                Edit Nweet\r\n              </EditButton>\r\n              <EditButton showEdit={showEdit} onClick={handleSubmit(onSubmit)}>\r\n                Update Nweet\r\n              </EditButton>\r\n            </EditButtons>\r\n          )}\r\n        </div>\r\n      </StyledNweet>\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ControlButton = styled.button`\r\n  outline: none;\r\n  height: 30px;\r\n  text-align: center;\r\n  width: min(30vw, 180px);\r\n  border-radius: 12px;\r\n  border: 1px solid #04aaff;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n  background-color: white;\r\n  cursor: pointer;\r\n  color: #1cb2ff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  transition: color 0.2s;\r\n  :hover {\r\n    background-color: #1cb2ff;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-top: 80px;\r\n  width: min(90vw, 520px);\r\n  padding: 22px 22px;\r\n  border-radius: 15px;\r\n  background-color: #a5c3dd;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  bottom: -10px;\r\n  display: flex;\r\n  gap: 30px;\r\n  justify-content: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const OtherProfileDiv = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  img {\r\n    border-radius: 25px;\r\n  }\r\n  span {\r\n    font-size: 25px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { ButtonContainer, Container, ControlButton } from \"style/HomeStyle\";\r\nimport { OtherProfileDiv } from \"style/OtherProfileStyle\";\r\n\r\nexport const OtherProfile = () => {\r\n  const [nweets, setNweets] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const { uid } = useParams();\r\n  let nweetArray;\r\n  const getPhoto = async () => {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", uid)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n    setPhotoURL(userSnapShot.docs[0].data().photoURL);\r\n    setDisplayName(userSnapShot.docs[0].data().displayName);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    window.scrollTo(0, 0);\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    if (id == \"prev\") {\r\n      setPage((prev) => {\r\n        if (prev <= 1) {\r\n          return 1;\r\n        } else {\r\n          return (prev -= 1);\r\n        }\r\n      });\r\n    } else {\r\n      setPage((prev) => {\r\n        if (nweets.length < 5) {\r\n          return prev;\r\n        } else {\r\n          return (prev += 1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getNweets = async (page) => {\r\n    let q = await query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\"),\r\n      where(\"creatorId\", \"==\", uid),\r\n      limit(5)\r\n    );\r\n    while (page > 1) {\r\n      const documentSnapshots = await getDocs(q);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      q = query(\r\n        collection(dbService, \"nweets\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        where(\"creatorId\", \"==\", uid),\r\n        startAfter(lastVisible),\r\n        limit(5)\r\n      );\r\n      page -= 1;\r\n    }\r\n    await onSnapshot(q, (snapShot) => {\r\n      nweetArray = snapShot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      if (nweetArray.length < 1) {\r\n        setPage((prev) => (prev -= 1));\r\n      }\r\n      setNweets(nweetArray);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getNweets(page);\r\n    getPhoto();\r\n  }, [page]);\r\n\r\n  return (\r\n    <Container>\r\n      <OtherProfileDiv>\r\n        <img src={photoURL} width=\"150px\" />\r\n        <span>{displayName}'s Profile</span>\r\n      </OtherProfileDiv>\r\n      {nweets.map((nweet) => (\r\n        <Nweet key={nweet.id} nweetObj={nweet} isOwner={false} />\r\n      ))}\r\n      <ControlButton id=\"prev\" onClick={handleClick}>\r\n        ◀\r\n      </ControlButton>\r\n      <ControlButton id=\"next\" onClick={handleClick}>\r\n        ▶\r\n      </ControlButton>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const AuthInput = styled.input`\r\n  outline: none;\r\n  padding: 12px 5px;\r\n  margin: 12px 0px;\r\n  border-radius: 12px;\r\n  border: 2px solid white;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n`;\r\nexport const SubmitButton = styled(AuthInput)`\r\n  background-color: white;\r\n  cursor: pointer;\r\n  color: #1cb2ff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  transition: all 0.2s;\r\n  :hover {\r\n    background-color: #1cb2ff;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n/* CSS */\r\nexport const Button31 = styled.button`\r\n  background-color: #222;\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: \"Farfetch Basis\", \"Helvetica Neue\", Arial, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  margin: 0;\r\n  max-width: none;\r\n  min-height: 44px;\r\n  min-width: 10px;\r\n  outline: none;\r\n  overflow: hidden;\r\n  padding: 9px 20px 8px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-transform: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  width: 100%;\r\n  :hover {\r\n    opacity: 0.75;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button31 } from \"./AuthStyle\";\r\nimport { Button11 } from \"./NweetStyle\";\r\n\r\nexport const ProfileLayout = styled.div`\r\n  input[type=\"file\"] {\r\n    width: 0px;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  input[type=\"text\"] {\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 15px;\r\n    margin-right: 15px;\r\n    padding: 5px 15px;\r\n    height: 50px;\r\n    width: 100%;\r\n    font-size: 17px;\r\n    font-weight: 600;\r\n  }\r\n  form {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\nexport const UpdateButton = styled(Button11)``;\r\n\r\nexport const LogoutButton = styled(Button31)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 15px;\r\n  width: 100px;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 15px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-top: 25px;\r\n  display: block;\r\n  position: relative;\r\n  background-image: ${(props) => {\r\n    return `url(${props.img})`;\r\n  }};\r\n  background-size: 100px 100px;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  button {\r\n    position: absolute;\r\n    top: -30px;\r\n    left: -15px;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n","import { signOut, updateProfile } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  startAfter,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"@firebase/storage\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { authService, dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { ButtonContainer, Container, ControlButton } from \"style/HomeStyle\";\r\nimport { Button11 } from \"style/NweetStyle\";\r\nimport {\r\n  Label,\r\n  LogoutButton,\r\n  ProfileLayout,\r\n  UpdateButton,\r\n} from \"style/ProfileStyle\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const { register, handleSubmit, setValue, getValues } = useForm();\r\n  setValue(\"newDisplayName\", userObj.displayName);\r\n  const [page, setPage] = useState(1);\r\n  console.log(userObj, page);\r\n  const [tempPhoto, setTempPhoto] = useState(userObj.photoUrl);\r\n  const [nweets, setNweets] = useState([]);\r\n  let nweetArray;\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = async () => {\r\n    await signOut(authService);\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n  const getMyNweets = async (page) => {\r\n    if (page < 1) {\r\n      return;\r\n    }\r\n    let q = await query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      limit(5)\r\n    );\r\n    while (page > 1) {\r\n      const documentSnapshots = await getDocs(q);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      q = query(\r\n        collection(dbService, \"nweets\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        where(\"creatorId\", \"==\", userObj.uid),\r\n        startAfter(lastVisible),\r\n        limit(5)\r\n      );\r\n      page -= 1;\r\n    }\r\n    await onSnapshot(q, (snapShot) => {\r\n      nweetArray = snapShot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      if (nweetArray.length < 1) {\r\n        setPage((prev) => (prev -= 1));\r\n      }\r\n      setNweets(nweetArray);\r\n    });\r\n  };\r\n  const onSubmit = async () => {\r\n    const { newDisplayName, profilePhoto } = getValues();\r\n    let newProfileUrl = userObj.photoUrl;\r\n    if (profilePhoto[0]) {\r\n      const newProfileUrlRef = ref(storageService, `${userObj.uid}/profile`);\r\n      await uploadBytes(newProfileUrlRef, profilePhoto[0]);\r\n      newProfileUrl = await getDownloadURL(newProfileUrlRef);\r\n    }\r\n    if (\r\n      userObj.displayName !== newDisplayName ||\r\n      userObj.photoUrl !== newProfileUrl\r\n    ) {\r\n      await updateProfile(await authService.currentUser, {\r\n        displayName: newDisplayName,\r\n        photoURL: newProfileUrl,\r\n      });\r\n      const userQuery = await query(\r\n        collection(dbService, \"user\"),\r\n        where(\"uid\", \"==\", userObj.uid)\r\n      );\r\n      const userSnapShot = await getDocs(userQuery);\r\n      await updateDoc(doc(dbService, `user/${userSnapShot.docs[0].id}`), {\r\n        displayName: newDisplayName,\r\n        photoURL: newProfileUrl,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const handleClick = (e) => {\r\n    window.scrollTo(0, 0);\r\n    console.log(nweets.length);\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    if (id == \"prev\") {\r\n      setPage((prev) => {\r\n        if (prev <= 1) {\r\n          return 1;\r\n        } else {\r\n          return (prev -= 1);\r\n        }\r\n      });\r\n    } else {\r\n      setPage((prev) => {\r\n        if (nweets.length < 5) {\r\n          return prev;\r\n        } else {\r\n          return (prev += 1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setTempPhoto(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets(page);\r\n  }, [page]);\r\n\r\n  return (\r\n    <Container>\r\n      <ProfileLayout>\r\n        <Label htmlFor=\"profilePhoto\" img={tempPhoto}>\r\n          <Button11>Change Photo</Button11>\r\n        </Label>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            {...register(\"newDisplayName\")}\r\n            maxLength=\"6\"\r\n            type=\"text\"\r\n            placeholder=\"Display name\"\r\n          />\r\n          <input\r\n            {...register(\"profilePhoto\")}\r\n            onChange={onFileChange}\r\n            id=\"profilePhoto\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n          <UpdateButton onClick={handleSubmit(onSubmit)}>Update</UpdateButton>\r\n        </form>\r\n        <LogoutButton onClick={onLogOutClick}>Log Out</LogoutButton>\r\n      </ProfileLayout>\r\n      {nweets.map((nweet) => (\r\n        <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n          userObj={userObj}\r\n        />\r\n      ))}\r\n      <ButtonContainer>\r\n        <ControlButton id=\"prev\" onClick={handleClick}>\r\n          ◀\r\n        </ControlButton>\r\n        <ControlButton id=\"next\" onClick={handleClick}>\r\n          ▶\r\n        </ControlButton>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default Profile;\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  AuthInput,\r\n  Button31,\r\n  Form,\r\n  Login,\r\n  SubmitButton,\r\n} from \"style/AuthStyle\";\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Error = styled.h4``;\r\nconst AuthForm = () => {\r\n  const { register, handleSubmit, getValues } = useForm();\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = async () => {\r\n    const { email, password } = getValues();\r\n    try {\r\n      if (newAccount) {\r\n        const result = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n        await addDoc(collection(dbService, \"user\"), {\r\n          uid: result.user.uid,\r\n          photoURL: result.user.photoURL\r\n            ? result.user.photoURL\r\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n          displayName: result.user.displayName\r\n            ? result.user.displayName\r\n            : result.user.email.split(\"@\")[0],\r\n          nweets: [],\r\n        });\r\n      } else {\r\n        await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <AuthInput\r\n          {...register(\"email\")}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <AuthInput\r\n          {...register(\"password\")}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <SubmitButton\r\n          className=\"submit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          required\r\n        />\r\n      </Form>\r\n      <Button31 onClick={toggleAccount}>\r\n        {newAccount ? \"LogIn\" : \"CreateAccount\"}\r\n      </Button31>\r\n      <Error>{error}</Error>\r\n    </Container>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import {\r\n  getAdditionalUserInfo,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport Color from \"components/Color\";\r\nimport { authService, dbService } from \"fBase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: ${Color.black};\r\n  opacity: 0.9;\r\n  height: 550px;\r\n  border-radius: 25px;\r\n`;\r\nconst Button = styled.button`\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  padding: 15px;\r\n  margin: 10px;\r\n  height: 50px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 0.2s;\r\n  cursor: pointer;\r\n`;\r\nconst ButtonBox = styled.div`\r\n  display: flex;\r\n  .github:hover {\r\n    background-color: #333333;\r\n    color: #ffffff;\r\n  }\r\n  .google:hover {\r\n    background-color: #de463b;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nconst Auth = (props) => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { className },\r\n    } = event;\r\n    console.log(className);\r\n    let provider;\r\n    if (className === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n      console.log(\"try google\");\r\n    } else if (className === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n      console.log(\"try github\");\r\n    }\r\n    try {\r\n      const result = await signInWithPopup(authService, provider);\r\n      if (await getAdditionalUserInfo(result).isNewUser) {\r\n        await addDoc(collection(dbService, \"user\"), {\r\n          uid: result.user.uid,\r\n          photoURL: result.user.photoURL\r\n            ? result.user.photoURL\r\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n          displayName: result.user.displayName\r\n            ? result.user.displayName\r\n            : result.user.email.split(\"@\")[0],\r\n          nweets: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\r\n      <AuthForm />\r\n      <ButtonBox>\r\n        <Button onClick={onSocialClick} name=\"google\" className=\"google\">\r\n          <span className=\"google\">Continue With Google &nbsp; &nbsp; </span>\r\n          <FontAwesomeIcon className=\"google\" icon={faGoogle} size=\"2x\" />\r\n        </Button>\r\n        <Button onClick={onSocialClick} name=\"github\" className=\"github\">\r\n          <span className=\"github\">Continue With github &nbsp; &nbsp;</span>\r\n          <FontAwesomeIcon className=\"github\" icon={faGithub} size=\"2x\" />\r\n        </Button>\r\n      </ButtonBox>\r\n    </Container>\r\n  );\r\n};\r\nexport default Auth;\r\n","export default {\r\n  blue: \"#04AAFF\",\r\n  black: \"#F8F8F8\",\r\n};\r\n","import styled from \"styled-components\";\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  width: min(91vw, 525px);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  label {\r\n    position: absolute;\r\n    right: min(22vw, 122px);\r\n    top: 22%;\r\n    color: #a6a3a1;\r\n  }\r\n  input[type=\"text\"] {\r\n    box-sizing: border-box;\r\n    word-break: break-all;\r\n    word-wrap: break-word;\r\n    text-overflow: clip;\r\n    width: min(70vw, 440px);\r\n    height: min(10vw, 50px);\r\n    :focus {\r\n      height: min(15vw, 75px);\r\n    }\r\n    transition: all 0.5s;\r\n  }\r\n  input[type=\"file\"] {\r\n    display: flex;\r\n    width: 0px;\r\n  }\r\n  .custom-file-upload {\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"submit\"] {\r\n    padding: 0;\r\n    font-size: min(3vw, 15px);\r\n    width: min(15vw, 75px);\r\n    height: min(10vw, 50px);\r\n  }\r\n`;\r\nexport const Attachment = styled.div`\r\n  img {\r\n    max-height: 500px;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  align-items: flex-end;\r\n  background-color: white;\r\n  padding: 15px 15px;\r\n  button {\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFile, faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Attachment, Form, TextArea } from \"style/NweetFactoryStyle\";\r\nimport { AuthInput, SubmitButton } from \"style/AuthStyle\";\r\nimport { Button11 } from \"style/NweetStyle\";\r\n\r\nconst NweetFacotry = ({ userObj }) => {\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const { register, handleSubmit, getValues, setValue } = useForm();\r\n  const onSubmit = async () => {\r\n    const { nweet, photo } = getValues();\r\n    console.log(nweet);\r\n    console.log(photo);\r\n    if (photo.length < 1 && !nweet) {\r\n      alert(\"Input Nweet or Photo please\");\r\n      return;\r\n    }\r\n    let attachmentUrl = null;\r\n    if (photo[0]) {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n\r\n      await uploadBytes(attachmentRef, photo[0]);\r\n      attachmentUrl = await getDownloadURL(attachmentRef);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      attachmentUrl,\r\n      creatorId: userObj.uid,\r\n      creatorName: userObj.displayName,\r\n      photoURL: userObj.photoURL\r\n        ? userObj.photoURL\r\n        : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n    };\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", userObj.uid)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n\r\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    await updateDoc(doc(dbService, `user/${userSnapShot.docs[0].id}`), {\r\n      nweets: [\r\n        {\r\n          text: nweetObj.text,\r\n          createdAt: nweetObj.createdAt,\r\n          attachmentUrl: nweetObj.attachmentUrl,\r\n        },\r\n        ...userSnapShot.docs[0].data().nweets,\r\n      ],\r\n    });\r\n    setAttachment(null);\r\n    setValue(\"nweet\", \"\");\r\n    setValue(\"photo\", \"\");\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(null);\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    //용량 체크\r\n    const maxSize = 2 * 1024 * 1024;\r\n    if (theFile.size > maxSize) {\r\n      alert(\"첨부파일 사이즈는 3MB 이내로 등록 가능합니다.\");\r\n      onClearAttachment();\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <AuthInput\r\n          {...register(\"nweet\")}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={80}\r\n        ></AuthInput>\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          <FontAwesomeIcon icon={faImage} size=\"lg\" />\r\n          <input\r\n            id=\"file-upload\"\r\n            {...register(\"photo\")}\r\n            onChange={onFileChange}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </label>\r\n        <SubmitButton type=\"submit\" value=\"Nweet\" />\r\n      </Form>\r\n      {attachment && (\r\n        <Attachment>\r\n          <Button11 onClick={onClearAttachment}>Clear</Button11>\r\n          <img src={attachment} width=\"100%\" />\r\n        </Attachment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NweetFacotry;\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFacotry from \"components/NweetFactory\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ButtonContainer, Container, ControlButton } from \"style/HomeStyle\";\r\n\r\nconst Home = ({ userObj, page, setPage }) => {\r\n  const [userSnapShot, setUserSnapShot] = useState();\r\n  const [nweets, setNweets] = useState([]);\r\n  const getUserSnapShot = async () => {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", userObj.uid)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n    setUserSnapShot(userSnapShot);\r\n  };\r\n  useEffect(async () => {\r\n    getNweets(page);\r\n    getUserSnapShot();\r\n  }, [page]);\r\n  const getNweets = async (page) => {\r\n    let q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\"),\r\n      limit(5)\r\n    );\r\n    while (page > 1) {\r\n      const documentSnapshots = await getDocs(q);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      q = query(\r\n        collection(dbService, \"nweets\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        startAfter(lastVisible),\r\n        limit(5)\r\n      );\r\n      page -= 1;\r\n    }\r\n    await onSnapshot(q, (snapShot) => {\r\n      const nweetArray = snapShot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      if (nweetArray.length < 1) {\r\n        setPage((prev) => (prev -= 1));\r\n      }\r\n      setNweets(nweetArray);\r\n    });\r\n  };\r\n  const handleClick = (e) => {\r\n    window.scrollTo(0, 0);\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    if (id == \"prev\") {\r\n      setPage((prev) => {\r\n        if (prev <= 1) {\r\n          return 1;\r\n        } else {\r\n          return (prev -= 1);\r\n        }\r\n      });\r\n    } else {\r\n      setPage((prev) => {\r\n        if (nweets.length < 5) {\r\n          return prev;\r\n        } else {\r\n          return (prev += 1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <NweetFacotry userObj={userObj} userSnapShot={userSnapShot} />\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n            userSnapShot={userSnapShot}\r\n          />\r\n        ))}\r\n        <ButtonContainer>\r\n          <ControlButton id=\"prev\" onClick={handleClick}>\r\n            ◀\r\n          </ControlButton>\r\n          <ControlButton id=\"next\" onClick={handleClick}>\r\n            ▶\r\n          </ControlButton>\r\n        </ButtonContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport \"./Demo.css\";\r\n\r\nconst defaultSrc =\r\n  \"https://raw.githubusercontent.com/roadmanfong/react-cropper/master/example/img/child.jpg\";\r\n\r\nexport const Demo = () => {\r\n  const [image, setImage] = useState(defaultSrc);\r\n  const [cropData, setCropData] = useState(\"#\");\r\n  const [cropper, setCropper] = useState();\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    let files;\r\n    if (e.dataTransfer) {\r\n      files = e.dataTransfer.files;\r\n    } else if (e.target) {\r\n      files = e.target.files;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const getCropData = () => {\r\n    if (typeof cropper !== \"undefined\") {\r\n      setCropData(cropper.getCroppedCanvas().toDataURL());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ width: \"100%\" }}>\r\n        <input type=\"file\" onChange={onChange} />\r\n        <button>Use default img</button>\r\n        <br />\r\n        <br />\r\n        <Cropper\r\n          style={{ height: 400, width: \"100%\" }}\r\n          zoomTo={0.5}\r\n          initialAspectRatio={1}\r\n          preview=\".img-preview\"\r\n          src={image}\r\n          viewMode={1}\r\n          minCropBoxHeight={10}\r\n          minCropBoxWidth={10}\r\n          background={false}\r\n          responsive={true}\r\n          autoCropArea={1}\r\n          checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n          onInitialized={(instance) => {\r\n            setCropper(instance);\r\n          }}\r\n          guides={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"box\" style={{ width: \"50%\", float: \"right\" }}>\r\n          <h1>Preview</h1>\r\n          <div\r\n            className=\"img-preview\"\r\n            style={{ width: \"100%\", float: \"left\", height: \"300px\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"box\"\r\n          style={{ width: \"50%\", float: \"right\", height: \"300px\" }}\r\n        >\r\n          <h1>\r\n            <span>Crop</span>\r\n            <button style={{ float: \"right\" }} onClick={getCropData}>\r\n              Crop Image\r\n            </button>\r\n          </h1>\r\n          <img style={{ width: \"100%\" }} src={cropData} alt=\"cropped\" />\r\n        </div>\r\n      </div>\r\n      <br style={{ clear: \"both\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.div`\r\n  padding: 0px 20px 10px 20px;\r\n  height: 70px;\r\n  border-radius: 25px;\r\n  /* background-color: cyan; */\r\n  position: absolute;\r\n  top: 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 91vw;\r\n  max-width: 525px;\r\n  align-items: center;\r\n  img {\r\n    border-radius: 50%;\r\n    max-width: 48px;\r\n    max-height: 48px;\r\n  }\r\n\r\n  span {\r\n    display: none;\r\n  }\r\n  a {\r\n    color: white;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  a:hover {\r\n    span {\r\n      display: inline-block;\r\n      z-index: 1;\r\n      font-weight: 600;\r\n      background-color: #9bd2c3;\r\n      padding: 5px;\r\n      top: 40px;\r\n      border-radius: 5px;\r\n      position: absolute;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      max-width: 100px;\r\n    }\r\n  }\r\n`;\r\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"style/NavStyle\";\r\n\r\nconst Navigation = ({ userObj, setPage }) => {\r\n  const homeClick = () => {\r\n    setPage(1);\r\n  };\r\n  return (\r\n    <Nav>\r\n      <Link to=\"/\" onClick={homeClick}>\r\n        <span>home</span>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n\r\n      <Link to=\"/profile\">\r\n        <span>{userObj?.displayName}</span>\r\n        <img\r\n          src={\r\n            userObj?.photoUrl\r\n              ? userObj.photoUrl\r\n              : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\"\r\n          }\r\n        />\r\n      </Link>\r\n    </Nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { OtherProfile } from \"routes/OthersProfile\";\r\nimport Profile from \"routes/Profile\";\r\nimport styled from \"styled-components\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Demo from \"./Demo\";\r\nimport Navigation from \"./Navigation\";\r\nconst Body = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: aliceblue;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  const [page, setPage] = useState(1);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <Body>\r\n            {isLoggedIn && <Navigation userObj={userObj} setPage={setPage} />}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} page={page} setPage={setPage} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Route exact path=\"/demo\">\r\n                <Demo />\r\n              </Route>\r\n              <Route exact path=\"/:uid\">\r\n                <OtherProfile />\r\n              </Route>\r\n            </Switch>\r\n          </Body>\r\n        ) : (\r\n          <Body>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </Body>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport { authService } from \"fBase\";\nimport { useEffect, useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyles = createGlobalStyle`\n  font-family:\"Spoqa Han Sans Neo\", \"Spoqa Han Sans JP\", sans-serif;\n  html{\n    scroll-behavior: smooth;\n  }\n  body{\n    background-color: #F0F8FF;\n  }\n    a {\n      text-decoration: none;\n      color:inherit;\n    }\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          photoUrl: user.photoURL\n            ? user.photoURL\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\n          displayName: user.displayName\n            ? user.displayName\n            : user.email.split(\"@\")[0],\n        });\n        setIsLoggedIn(true);\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = async () => {\n    const user = await authService.currentUser;\n    if (user) {\n      setUserObj({\n        uid: user.uid,\n        photoUrl: user.photoURL\n          ? user.photoURL\n          : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\n        displayName: user.displayName\n          ? user.displayName\n          : user.email.split(\"@\")[0],\n      });\n    } else {\n      setUserObj(null);\n    }\n  };\n  return (\n    <>\n      <GlobalStyles />\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          isLoggedIn={isLoggedIn}\n        />\n      ) : (\n        <span>Loading...</span>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n"],"sourceRoot":""}