{"version":3,"sources":["fBase.js","hooks/userQuery.js","style/NweetStyle.js","components/Nweet.js","style/HomeStyle.js","components/PageBtn.js","hooks/getNweets.js","style/OtherProfileStyle.js","routes/OthersProfile.js","components/Demo.js","style/AuthStyle.js","style/ProfileStyle.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Color.js","style/NweetFactoryStyle.js","components/ImgInput.js","components/NweetFactory.js","routes/Home.js","style/NavStyle.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","require","query","collection","where","getDocs","getUserSnapShot","userObj","a","uid","userQuery","docs","userSnapShot","StyledNweet","styled","div","Contents","Button11","button","props","children","ProfileImage","img","ShowButton","EditButton","showEdit","EditButtons","TextContainer","NweetName","span","NweetText","Nweet","nweetObj","isOwner","useForm","register","getValues","handleSubmit","useState","setComments","photoURL","setPhotoURL","setShowEdit","displayName","setDisplayName","editing","setEditing","likes","includes","isLike","setIsLike","useEffect","comments","map","comment","commentObj","id","data","text","prev","getPhoto","onDeleteClick","window","confirm","attachmentUrl","deleteObject","ref","deleteDoc","doc","onSubmit","updateDoc","creatorId","userPhotoURL","userDisplayName","clickLike","filter","like","to","src","onClick","style","cursor","length","value","type","placeholder","ControlButton","Container","ButtonContainer","PageBtn","nweets","setPage","handleClick","e","scrollTo","target","orderBy","limit","startAfter","onSnapshot","getNweets","page","setNweets","q","documentSnapshots","lastVisible","snapShot","nweetArray","OtherProfileDiv","OtherProfile","refreshUser","useParams","width","nweet","Demo","attachment","setAttachment","setIsCrop","image","cropper","setCropper","height","zIndex","zoomTo","initialAspectRatio","preview","viewMode","dragMode","minCropBoxHeight","minCropBoxWidth","cropBoxResizable","background","responsive","autoCropArea","checkOrientation","onInitialized","instance","guides","getCroppedCanvas","toDataURL","Form","form","AuthInput","input","SubmitButton","Button31","ProfileLayout","UpdateButton","LogoutButton","Label","label","Profile","setValue","isCrop","history","useHistory","onLogOutClick","signOut","push","location","reload","newDisplayName","newProfileUrl","newProfileUrlRef","uploadString","getDownloadURL","photoUrl","updateProfile","currentUser","onClearAttachment","htmlFor","maxLength","onChange","event","theFile","files","size","alert","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Error","h4","AuthForm","newAccount","setNewAccount","error","setError","email","password","createUserWithEmailAndPassword","addDoc","user","split","signInWithEmailAndPassword","message","required","className","Button","ButtonBox","Auth","onSocialClick","console","log","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","getAdditionalUserInfo","isNewUser","icon","faTwitter","color","name","faGoogle","faGithub","ImgInput","NweetFacotry","attachmentRef","uuidv4","createdAt","Date","now","creatorName","faImage","Home","Nav","Navigation","Body","AppRouter","isLoggedIn","exact","path","GlobalStyles","createGlobalStyle","App","init","setInit","setIsLoggedIn","setUserObj","setUserSnapShot","onAuthStateChanged","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8753d2b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC6d2rzFtMpx6Y3k-usaOOK2onpxyN1mmU\",\r\n  authDomain: \"ntwitter-8313d.firebaseapp.com\",\r\n  projectId: \"ntwitter-8313d\",\r\n  storageBucket: \"ntwitter-8313d.appspot.com\",\r\n  messagingSenderId: \"135453840930\",\r\n  appId: \"1:135453840930:web:735c0d5f669e53cd9a5c7b\",\r\n};\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage(firebaseApp);\r\n","const { query, collection, where, getDocs } = require(\"@firebase/firestore\");\r\nconst { dbService } = require(\"fBase\");\r\n\r\nexport const getUserSnapShot = async (userObj) => {\r\n  if (userObj) {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", userObj.uid)\r\n    );\r\n    const userSnapShot = await (await getDocs(userQuery)).docs[0];\r\n    return userSnapShot;\r\n  }\r\n};\r\nexport const getUser = async (uid) => {\r\n  if (uid) {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", uid)\r\n    );\r\n    const userSnapShot = await (await getDocs(userQuery)).docs[0];\r\n    return userSnapShot.data();\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNweet = styled.div`\r\n  background-color: white;\r\n  position: relative;\r\n  outline: none;\r\n  padding: 12px 5px;\r\n  margin: 12px 0px;\r\n  border-radius: 12px;\r\n  border: 2px solid white;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.5s;\r\n`;\r\nexport const Contents = styled.div`\r\n  display: flex;\r\n  > div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\nexport const Comments = styled.div`\r\n  border-top: 2px solid black;\r\n`;\r\n\r\nexport const Button11 = styled.button`\r\n  appearance: button;\r\n\r\n  background-color: ${(props) => {\r\n    if (props.children === \"Cancel\") {\r\n      return \"#D54D52\";\r\n    } else {\r\n      return \"#1899d6\";\r\n    }\r\n  }};\r\n\r\n  border: solid transparent;\r\n  border-radius: min(16px, 3vw);\r\n  border-width: 0 0 min(4px, 0.8vw);\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: din-round, sans-serif;\r\n  font-size: min(12px, 2vw);\r\n  font-weight: 700;\r\n  letter-spacing: 0.8px;\r\n  line-height: min(20px, 4vw);\r\n  margin: 0;\r\n  outline: none;\r\n  overflow: visible;\r\n  padding: 3px min(16px, 3vw);\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  touch-action: manipulation;\r\n  transform: translateZ(0);\r\n  transition: filter 0.2s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  /* width: 100%; */\r\n  :after {\r\n    background-clip: padding-box;\r\n    background-color: ${(props) => {\r\n      if (props.children === \"Cancel\") {\r\n        return \"#D54D52\";\r\n      } else {\r\n        return \"#1cb0f6\";\r\n      }\r\n    }};\r\n    border: solid transparent;\r\n    border-radius: 16px;\r\n    border-width: 0 0 4px;\r\n    bottom: -4px;\r\n    content: \"\";\r\n    left: 0;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: -1;\r\n  }\r\n  :main,\r\n  :focus {\r\n    user-select: auto;\r\n  }\r\n  :hover:not(:disabled) {\r\n    filter: brightness(1.1);\r\n  }\r\n  :disabled {\r\n    cursor: auto;\r\n  }\r\n`;\r\n\r\nexport const ProfileImage = styled.img`\r\n  width: 50px;\r\n  border-radius: 50%;\r\n`;\r\nexport const ShowButton = styled(Button11)``;\r\nexport const EditButton = styled(Button11)`\r\n  display: ${(props) => (props.showEdit ? \"block\" : \"none\")};\r\n`;\r\nexport const EditButtons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  /* transform: translateX(370px); */\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  img {\r\n    margin-top: 15px;\r\n    width: 100%;\r\n    border-radius: 15px;\r\n    max-height: 500px;\r\n  }\r\n  input[type=\"text\"] {\r\n    font-size: 16px;\r\n    margin-left: 12px;\r\n  }\r\n`;\r\nexport const NweetName = styled.span`\r\n  display: inline-block;\r\n  font-weight: 600;\r\n  margin-left: 12px;\r\n  max-width: 100px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\nexport const NweetText = styled.span`\r\n  margin-left: 12px;\r\n`;\r\n","import { getAuth } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ProfileDisplayName,\r\n  ProfileImage,\r\n  ProfileImageContainer,\r\n  StyledNweet,\r\n  TextContainer,\r\n  NweetText,\r\n  NweetName,\r\n  EditButtons,\r\n  ShowButton,\r\n  EditButton,\r\n  Editing,\r\n  Contents,\r\n  Comments,\r\n} from \"style/NweetStyle\";\r\nimport { Comment, CommentFactory } from \"./Comment\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, userObj, userSnapShot }) => {\r\n  const { register, getValues, handleSubmit } = useForm();\r\n  const [comments, setComments] = useState([]);\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [editing, setEditing] = useState(false);\r\n  const [isLike, setIsLike] = useState(nweetObj.likes.includes(userObj.uid));\r\n  useEffect(() => {\r\n    nweetObj.comments.map(async (comment) => {\r\n      const userQuery = await query(\r\n        collection(dbService, \"user\"),\r\n        where(\"uid\", \"==\", comment.uid)\r\n      );\r\n      const userSnapShot = await getDocs(userQuery);\r\n      const commentObj = {\r\n        id: comment.id,\r\n        uid: comment.uid,\r\n        data: userSnapShot.docs[0].data(),\r\n        text: comment.text,\r\n      };\r\n      setComments((prev) => [commentObj, ...prev]);\r\n    });\r\n\r\n    getPhoto();\r\n  }, []);\r\n  // creatorId 이용해서 User 리턴받고 PhotoUrl 얻기\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      nweetObj.attachmentUrl &&\r\n        (await deleteObject(ref(storageService, nweetObj.attachmentUrl)));\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      //user 안에 있는 nweets array 에서 지우기\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: getValues(\"newNweet\"),\r\n    });\r\n\r\n    setEditing(false);\r\n  };\r\n\r\n  const getPhoto = async () => {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", nweetObj.creatorId)\r\n    );\r\n    const userSnapShot = await getDocs(userQuery);\r\n    const userPhotoURL = userSnapShot.docs[0].data().photoURL;\r\n    const userDisplayName = userSnapShot.docs[0].data().displayName;\r\n    setDisplayName(userDisplayName);\r\n    setPhotoURL(userPhotoURL);\r\n  };\r\n  const onShowClick = () => {\r\n    setShowEdit((prev) => {\r\n      if (prev) {\r\n        setEditing(false);\r\n      }\r\n      return !prev;\r\n    });\r\n  };\r\n  const clickLike = async () => {\r\n    if (isLike) {\r\n      updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n        likes: nweetObj.likes.filter((like) => like !== userObj.uid),\r\n      });\r\n    } else {\r\n      updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n        likes: [userObj.uid, ...nweetObj.likes],\r\n      });\r\n    }\r\n    setIsLike((prev) => !prev);\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledNweet>\r\n        <Contents>\r\n          <Link to={isOwner ? \"/profile\" : nweetObj.creatorId}>\r\n            <ProfileImage src={photoURL} />\r\n          </Link>\r\n          <div>\r\n            <TextContainer>\r\n              <NweetName>{displayName}</NweetName>\r\n              <NweetName onClick={clickLike}>\r\n                <span style={{ cursor: \"pointer\" }}>\r\n                  {isLike ? \"🧡\" : \"🤍\"}\r\n                  {nweetObj.likes ? nweetObj.likes.length : 0}\r\n                </span>\r\n              </NweetName>\r\n              {editing ? (\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <input\r\n                    id=\"editNweet\"\r\n                    {...register(\"newNweet\", { value: nweetObj.text })}\r\n                    type=\"text\"\r\n                    placeholder=\"Edit your nweet\"\r\n                  />\r\n                </form>\r\n              ) : (\r\n                <NweetText>{nweetObj.text}</NweetText>\r\n              )}\r\n              {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n            </TextContainer>\r\n            {isOwner ? (\r\n              <EditButtons showEdit={showEdit}>\r\n                <ShowButton onClick={onShowClick} showEdit={showEdit}>\r\n                  {showEdit ? \"Cancel\" : \"Edit\"}\r\n                </ShowButton>\r\n                <EditButton showEdit={showEdit} onClick={onDeleteClick}>\r\n                  Delete Nweet\r\n                </EditButton>\r\n                <EditButton showEdit={showEdit} onClick={toggleEditing}>\r\n                  Edit Nweet\r\n                </EditButton>\r\n                <EditButton\r\n                  showEdit={showEdit}\r\n                  onClick={handleSubmit(onSubmit)}\r\n                >\r\n                  Update Nweet\r\n                </EditButton>\r\n              </EditButtons>\r\n            ) : (\r\n              <EditButtons>\r\n                <ShowButton>Show</ShowButton>\r\n              </EditButtons>\r\n            )}\r\n          </div>\r\n        </Contents>\r\n\r\n        {/* <Comments>\r\n          <CommentFactory userObj={userObj} nweetObj={nweetObj} />\r\n          {comments.map((comment) => (\r\n            <Comment\r\n              key={comment.createdAt}\r\n              userObj={userObj}\r\n              commentObj={comment}\r\n              nweetObj={nweetObj}\r\n            />\r\n          ))}\r\n        </Comments> */}\r\n      </StyledNweet>\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ControlButton = styled.button`\r\n  outline: none;\r\n  height: 30px;\r\n  text-align: center;\r\n  width: min(30vw, 180px);\r\n  border-radius: 12px;\r\n  border: 1px solid #04aaff;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n  background-color: white;\r\n  cursor: pointer;\r\n  color: #1cb2ff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  transition: color 0.2s;\r\n  :hover {\r\n    background-color: #1cb2ff;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-top: 80px;\r\n  width: min(90vw, 520px);\r\n  padding: 22px 22px;\r\n  border-radius: 15px;\r\n  background-color: #a5c3dd;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  bottom: -10px;\r\n  display: flex;\r\n  gap: 30px;\r\n  justify-content: center;\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonContainer, ControlButton } from \"style/HomeStyle\";\r\n\r\nexport const PageBtn = ({ nweets, setPage }) => {\r\n  const handleClick = (e) => {\r\n    window.scrollTo(0, 0);\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    if (id == \"prev\") {\r\n      setPage((prev) => {\r\n        if (prev <= 1) {\r\n          return 1;\r\n        } else {\r\n          return (prev -= 1);\r\n        }\r\n      });\r\n    } else {\r\n      setPage((prev) => {\r\n        if (nweets.length < 5) {\r\n          return prev;\r\n        } else {\r\n          return (prev += 1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <ButtonContainer>\r\n      <ControlButton id=\"prev\" onClick={handleClick}>\r\n        ◀\r\n      </ControlButton>\r\n      <ControlButton id=\"next\" onClick={handleClick}>\r\n        ▶\r\n      </ControlButton>\r\n    </ButtonContainer>\r\n  );\r\n};\r\n","const {\r\n  query,\r\n  collection,\r\n  orderBy,\r\n  limit,\r\n  getDocs,\r\n  startAfter,\r\n  onSnapshot,\r\n  where,\r\n} = require(\"@firebase/firestore\");\r\nconst { dbService } = require(\"fBase\");\r\n\r\nexport const getNweets = async (page, setPage, setNweets, uid) => {\r\n  if (page < 1) {\r\n    return;\r\n  }\r\n  let q;\r\n  if (uid) {\r\n    q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\"),\r\n      where(\"creatorId\", \"==\", uid),\r\n      limit(5)\r\n    );\r\n  } else {\r\n    q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\"),\r\n      limit(5)\r\n    );\r\n  }\r\n  while (page > 1) {\r\n    const documentSnapshots = await getDocs(q);\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    if (uid) {\r\n      q = query(\r\n        collection(dbService, \"nweets\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        where(\"creatorId\", \"==\", uid),\r\n        startAfter(lastVisible),\r\n        limit(5)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(dbService, \"nweets\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        startAfter(lastVisible),\r\n        limit(5)\r\n      );\r\n    }\r\n    page -= 1;\r\n  }\r\n  await onSnapshot(q, (snapShot) => {\r\n    const nweetArray = snapShot.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      };\r\n    });\r\n    if (nweetArray.length < 1) {\r\n      setPage((prev) => (prev -= 1));\r\n    }\r\n    setNweets(nweetArray);\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const OtherProfileDiv = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  img {\r\n    border-radius: 25px;\r\n  }\r\n  span {\r\n    font-size: 25px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { PageBtn } from \"components/PageBtn\";\r\nimport { dbService } from \"fBase\";\r\nimport { getNweets } from \"hooks/getNweets\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { ButtonContainer, Container, ControlButton } from \"style/HomeStyle\";\r\nimport { OtherProfileDiv } from \"style/OtherProfileStyle\";\r\n\r\nexport const OtherProfile = ({ refreshUser, userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const { uid } = useParams();\r\n  let userSnapShot;\r\n  let nweetArray;\r\n  const getPhoto = async () => {\r\n    const userQuery = await query(\r\n      collection(dbService, \"user\"),\r\n      where(\"uid\", \"==\", uid)\r\n    );\r\n    userSnapShot = await getDocs(userQuery);\r\n    setPhotoURL(userSnapShot.docs[0].data().photoURL);\r\n    setDisplayName(userSnapShot.docs[0].data().displayName);\r\n  };\r\n  useEffect(() => {\r\n    getPhoto();\r\n  });\r\n  useEffect(() => {\r\n    getNweets(page, setPage, setNweets, uid);\r\n  }, [page]);\r\n\r\n  return (\r\n    <Container>\r\n      <OtherProfileDiv>\r\n        <img src={photoURL} width=\"150px\" />\r\n        <span>{displayName}'s Profile</span>\r\n      </OtherProfileDiv>\r\n      {nweets.map((nweet) => (\r\n        <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={false}\r\n          userObj={userObj}\r\n        />\r\n      ))}\r\n      <PageBtn nweets={nweets} setPage={setPage} />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { Button11, StyledNweet, EditButtons } from \"style/NweetStyle\";\r\n\r\nexport const Demo = ({ attachment, setAttachment, setIsCrop }) => {\r\n  const [image, setImage] = useState(attachment);\r\n  const [cropData, setCropData] = useState(\"#\");\r\n  const [cropper, setCropper] = useState();\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    let files;\r\n    if (e.dataTransfer) {\r\n      files = e.dataTransfer.files;\r\n    } else if (e.target) {\r\n      files = e.target.files;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const getCropData = () => {\r\n    if (typeof cropper !== \"undefined\") {\r\n      setAttachment(cropper.getCroppedCanvas().toDataURL());\r\n      setIsCrop(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledNweet>\r\n        <div>\r\n          <Cropper\r\n            style={{ height: 400, width: \"100%\", zIndex: 1 }}\r\n            zoomTo={0.1}\r\n            initialAspectRatio={1}\r\n            preview=\".img-preview\"\r\n            src={image}\r\n            viewMode={1}\r\n            dragMode={\"move\"}\r\n            minCropBoxHeight={10}\r\n            minCropBoxWidth={10}\r\n            cropBoxResizable={false}\r\n            background={false}\r\n            responsive={true}\r\n            autoCropArea={1}\r\n            checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n            onInitialized={(instance) => {\r\n              setCropper(instance);\r\n            }}\r\n            guides={true}\r\n          />\r\n          <EditButtons>\r\n            <Button11 onClick={getCropData}>Crop Image</Button11>\r\n          </EditButtons>\r\n        </div>\r\n      </StyledNweet>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const AuthInput = styled.input`\r\n  outline: none;\r\n  padding: 12px 5px;\r\n  margin: 12px 0px;\r\n  border-radius: 12px;\r\n  border: 2px solid white;\r\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\r\n`;\r\nexport const SubmitButton = styled(AuthInput)`\r\n  background-color: white;\r\n  cursor: pointer;\r\n  color: #1cb2ff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  transition: all 0.2s;\r\n  :hover {\r\n    background-color: #1cb2ff;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n/* CSS */\r\nexport const Button31 = styled.button`\r\n  background-color: #222;\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: \"Farfetch Basis\", \"Helvetica Neue\", Arial, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  margin: 0;\r\n  max-width: none;\r\n  min-height: 44px;\r\n  min-width: 10px;\r\n  outline: none;\r\n  overflow: hidden;\r\n  padding: 9px 20px 8px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-transform: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  width: 100%;\r\n  :hover {\r\n    opacity: 0.75;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button31 } from \"./AuthStyle\";\r\nimport { Button11 } from \"./NweetStyle\";\r\n\r\nexport const ProfileLayout = styled.div`\r\n  input[type=\"file\"] {\r\n    width: 0px;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  input[type=\"text\"] {\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 15px;\r\n    margin-right: 15px;\r\n    padding: 5px 15px;\r\n    height: 50px;\r\n    width: 100%;\r\n    font-size: 17px;\r\n    font-weight: 600;\r\n  }\r\n  form {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\nexport const UpdateButton = styled(Button11)``;\r\n\r\nexport const LogoutButton = styled(Button31)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 15px;\r\n  width: 100px;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 15px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-top: 25px;\r\n  display: block;\r\n  position: relative;\r\n  background-image: ${(props) => {\r\n    return `url(${props.img})`;\r\n  }};\r\n  background-size: 100px 100px;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  button {\r\n    position: absolute;\r\n    top: -30px;\r\n    left: -15px;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n","import { signOut, updateProfile } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  startAfter,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport Demo from \"components/Demo\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { PageBtn } from \"components/PageBtn\";\r\nimport { authService, dbService, storageService } from \"fBase\";\r\nimport { getNweets } from \"hooks/getNweets\";\r\nimport { getUserSnapShot } from \"hooks/userQuery\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { ButtonContainer, Container, ControlButton } from \"style/HomeStyle\";\r\nimport { Button11 } from \"style/NweetStyle\";\r\nimport {\r\n  Label,\r\n  LogoutButton,\r\n  ProfileLayout,\r\n  UpdateButton,\r\n} from \"style/ProfileStyle\";\r\n\r\nconst Profile = ({ refreshUser, userObj, userSnapShot }) => {\r\n  const { register, handleSubmit, setValue, getValues } = useForm();\r\n  setValue(\"newDisplayName\", userObj.displayName);\r\n  const [page, setPage] = useState(1);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [isCrop, setIsCrop] = useState(false);\r\n  const [nweets, setNweets] = useState([]);\r\n  let nweetArray;\r\n\r\n  useEffect(() => {\r\n    getNweets(page, setPage, setNweets, userObj.uid);\r\n    // getMyNweets(page);\r\n  }, [page]);\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = async () => {\r\n    await signOut(authService);\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { newDisplayName } = getValues();\r\n\r\n    let newProfileUrl = null;\r\n    if (attachment !== \"\") {\r\n      const newProfileUrlRef = ref(storageService, `${userObj.uid}/profile`);\r\n      await uploadString(newProfileUrlRef, attachment, \"data_url\");\r\n      newProfileUrl = await getDownloadURL(newProfileUrlRef);\r\n    }\r\n    if (\r\n      userObj.displayName !== newDisplayName ||\r\n      userObj.photoUrl !== newProfileUrl\r\n    ) {\r\n      await updateProfile(await authService.currentUser, {\r\n        displayName: newDisplayName,\r\n        photoURL: newProfileUrl,\r\n      });\r\n\r\n      // const userSnapShot = await getUserSnapShot(userObj);\r\n      await updateDoc(doc(dbService, `user/${userSnapShot.id}`), {\r\n        displayName: newDisplayName,\r\n        photoURL: newProfileUrl,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    setIsCrop(true);\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const maxSize = 5 * 1024 * 1024;\r\n    if (theFile.size > maxSize) {\r\n      alert(\"프로필 사이즈는 5MB 이내로 등록 가능합니다.\");\r\n      onClearAttachment();\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(null);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <ProfileLayout>\r\n          <Label\r\n            htmlFor=\"profilePhoto\"\r\n            img={attachment ? attachment : userObj.photoUrl}\r\n          >\r\n            <Button11>Change Photo</Button11>\r\n          </Label>\r\n          {isCrop && attachment && (\r\n            <Demo\r\n              attachment={attachment}\r\n              setAttachment={setAttachment}\r\n              setIsCrop={setIsCrop}\r\n            />\r\n          )}\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n              {...register(\"newDisplayName\")}\r\n              maxLength=\"6\"\r\n              type=\"text\"\r\n              placeholder=\"Display name\"\r\n            />\r\n            <input\r\n              {...register(\"profilePhoto\")}\r\n              onChange={onFileChange}\r\n              id=\"profilePhoto\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n            />\r\n            <UpdateButton onClick={handleSubmit(onSubmit)}>Update</UpdateButton>\r\n          </form>\r\n          <LogoutButton onClick={onLogOutClick}>Log Out</LogoutButton>\r\n        </ProfileLayout>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n          />\r\n        ))}\r\n        <PageBtn nweets={nweets} setPage={setPage} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  AuthInput,\r\n  Button31,\r\n  Form,\r\n  Login,\r\n  SubmitButton,\r\n} from \"style/AuthStyle\";\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Error = styled.h4``;\r\nconst AuthForm = () => {\r\n  const { register, handleSubmit, getValues } = useForm();\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = async () => {\r\n    const { email, password } = getValues();\r\n    try {\r\n      if (newAccount) {\r\n        const result = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n        await addDoc(collection(dbService, \"user\"), {\r\n          uid: result.user.uid,\r\n          photoURL: result.user.photoURL\r\n            ? result.user.photoURL\r\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n          displayName: result.user.displayName\r\n            ? result.user.displayName\r\n            : result.user.email.split(\"@\")[0],\r\n          nweets: [],\r\n        });\r\n      } else {\r\n        await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <AuthInput\r\n          {...register(\"email\")}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <AuthInput\r\n          {...register(\"password\")}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <SubmitButton\r\n          className=\"submit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          required\r\n        />\r\n      </Form>\r\n      <Button31 onClick={toggleAccount}>\r\n        {newAccount ? \"LogIn\" : \"CreateAccount\"}\r\n      </Button31>\r\n      <Error>{error}</Error>\r\n    </Container>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import {\r\n  getAdditionalUserInfo,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport Color from \"components/Color\";\r\nimport { authService, dbService } from \"fBase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: ${Color.black};\r\n  opacity: 0.9;\r\n  height: 550px;\r\n  border-radius: 25px;\r\n`;\r\nconst Button = styled.button`\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  padding: 15px;\r\n  margin: 10px;\r\n  height: 50px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 0.2s;\r\n  cursor: pointer;\r\n`;\r\nconst ButtonBox = styled.div`\r\n  display: flex;\r\n  .github:hover {\r\n    background-color: #333333;\r\n    color: #ffffff;\r\n  }\r\n  .google:hover {\r\n    background-color: #de463b;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nconst Auth = (props) => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { className },\r\n    } = event;\r\n    console.log(className);\r\n    let provider;\r\n    if (className === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n      console.log(\"try google\");\r\n    } else if (className === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n      console.log(\"try github\");\r\n    }\r\n    try {\r\n      const result = await signInWithPopup(authService, provider);\r\n      if (await getAdditionalUserInfo(result).isNewUser) {\r\n        await addDoc(collection(dbService, \"user\"), {\r\n          uid: result.user.uid,\r\n          photoURL: result.user.photoURL\r\n            ? result.user.photoURL\r\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n          displayName: result.user.displayName\r\n            ? result.user.displayName\r\n            : result.user.email.split(\"@\")[0],\r\n          nweets: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\r\n      <AuthForm />\r\n      <ButtonBox>\r\n        <Button onClick={onSocialClick} name=\"google\" className=\"google\">\r\n          <span className=\"google\">Continue With Google &nbsp; &nbsp; </span>\r\n          <FontAwesomeIcon className=\"google\" icon={faGoogle} size=\"2x\" />\r\n        </Button>\r\n        <Button onClick={onSocialClick} name=\"github\" className=\"github\">\r\n          <span className=\"github\">Continue With github &nbsp; &nbsp;</span>\r\n          <FontAwesomeIcon className=\"github\" icon={faGithub} size=\"2x\" />\r\n        </Button>\r\n      </ButtonBox>\r\n    </Container>\r\n  );\r\n};\r\nexport default Auth;\r\n","export default {\r\n  blue: \"#04AAFF\",\r\n  black: \"#F8F8F8\",\r\n};\r\n","import styled from \"styled-components\";\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  width: min(91vw, 525px);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  label {\r\n    position: absolute;\r\n    right: min(22vw, 122px);\r\n    top: 22%;\r\n    color: #a6a3a1;\r\n  }\r\n  input[type=\"text\"] {\r\n    box-sizing: border-box;\r\n    word-break: break-all;\r\n    word-wrap: break-word;\r\n    text-overflow: clip;\r\n    width: min(70vw, 440px);\r\n    height: min(10vw, 50px);\r\n    :focus {\r\n      height: min(15vw, 75px);\r\n    }\r\n    transition: all 0.5s;\r\n  }\r\n  input[type=\"file\"] {\r\n    display: flex;\r\n    width: 0px;\r\n  }\r\n  .custom-file-upload {\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"submit\"] {\r\n    padding: 0;\r\n    font-size: min(3vw, 15px);\r\n    width: min(15vw, 75px);\r\n    height: min(10vw, 50px);\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const ImgInput = ({ setIsCrop, setAttachment }) => {\r\n  const onFileChange = (event) => {\r\n    setIsCrop(true);\r\n    setAttachment(null);\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    //용량 체크\r\n    const maxSize = 2 * 1024 * 1024;\r\n    if (theFile.size > maxSize) {\r\n      alert(\"첨부파일 사이즈는 2MB 이내로 등록 가능합니다.\");\r\n      setAttachment(null);\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    event.target.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <input\r\n      id=\"file-upload\"\r\n      onChange={onFileChange}\r\n      type=\"file\"\r\n      accept=\"image/*\"\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  getDownloadURL,\r\n  ref,\r\n  uploadBytes,\r\n  uploadString,\r\n} from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFile, faImage, faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Attachment, Form, TextArea } from \"style/NweetFactoryStyle\";\r\nimport { AuthInput, SubmitButton } from \"style/AuthStyle\";\r\nimport {\r\n  Button11,\r\n  EditButtons,\r\n  NweetName,\r\n  StyledNweet,\r\n  TextContainer,\r\n} from \"style/NweetStyle\";\r\nimport Demo from \"./Demo\";\r\nimport { ImgInput } from \"./ImgInput\";\r\n\r\nconst NweetFacotry = ({ userObj, refreshUser }) => {\r\n  const [attachment, setAttachment] = useState(null);\r\n  const [isCrop, setIsCrop] = useState(false);\r\n  const { register, handleSubmit, getValues, setValue } = useForm();\r\n  const onSubmit = async () => {\r\n    const { nweet } = getValues();\r\n    if (attachment === null && !nweet) {\r\n      alert(\"Input Nweet or Photo please\");\r\n      return;\r\n    }\r\n    let attachmentUrl = null;\r\n    if (attachment !== null) {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      await uploadString(attachmentRef, attachment, \"data_url\");\r\n      attachmentUrl = await getDownloadURL(attachmentRef);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      likes: [],\r\n      comments: [],\r\n      createdAt: Date.now(),\r\n      attachmentUrl,\r\n      creatorId: userObj.uid,\r\n      creatorName: userObj.displayName,\r\n      photoURL: userObj.photoURL\r\n        ? userObj.photoURL\r\n        : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\r\n    };\r\n    const nweetResult = await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n\r\n    refreshUser();\r\n\r\n    setAttachment(null);\r\n    setValue(\"nweet\", \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <AuthInput\r\n          {...register(\"nweet\")}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={80}\r\n        ></AuthInput>\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          <FontAwesomeIcon icon={faImage} size=\"lg\" />\r\n          <ImgInput setAttachment={setAttachment} setIsCrop={setIsCrop} />\r\n        </label>\r\n        <SubmitButton type=\"submit\" value=\"Nweet\" />\r\n      </Form>\r\n      {attachment && isCrop && (\r\n        <Demo\r\n          attachment={attachment}\r\n          setAttachment={setAttachment}\r\n          setIsCrop={setIsCrop}\r\n        />\r\n      )}\r\n      {attachment && !isCrop && (\r\n        <StyledNweet>\r\n          <div>\r\n            <TextContainer>\r\n              <img src={attachment} />\r\n            </TextContainer>\r\n            <EditButtons>\r\n              <Button11 onClick={() => setAttachment(null)}>Cancel</Button11>\r\n              <Button11 onClick={() => setIsCrop(true)}>Crop Size</Button11>\r\n            </EditButtons>\r\n          </div>\r\n        </StyledNweet>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NweetFacotry;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFacotry from \"components/NweetFactory\";\r\nimport { PageBtn } from \"components/PageBtn\";\r\nimport { getNweets } from \"hooks/getNweets\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"style/HomeStyle\";\r\n\r\nconst Home = ({ userObj, page, setPage, userSnapShot, refreshUser }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    getNweets(page, setPage, setNweets);\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <NweetFacotry\r\n          userObj={userObj}\r\n          userSnapShot={userSnapShot}\r\n          refreshUser={refreshUser}\r\n        />\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n            userSnapShot={userSnapShot}\r\n            refreshUser={refreshUser}\r\n          />\r\n        ))}\r\n        <PageBtn nweets={nweets} setPage={setPage} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.div`\r\n  padding: 0px 20px 10px 20px;\r\n  height: 70px;\r\n  border-radius: 25px;\r\n  /* background-color: cyan; */\r\n  position: absolute;\r\n  top: 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 91vw;\r\n  max-width: 525px;\r\n  align-items: center;\r\n  img {\r\n    border-radius: 50%;\r\n    max-width: 48px;\r\n    max-height: 48px;\r\n  }\r\n\r\n  span {\r\n    display: none;\r\n  }\r\n  a {\r\n    color: white;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  a:hover {\r\n    span {\r\n      display: inline-block;\r\n      z-index: 1;\r\n      font-weight: 600;\r\n      background-color: #9bd2c3;\r\n      padding: 5px;\r\n      top: 40px;\r\n      border-radius: 5px;\r\n      position: absolute;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      max-width: 100px;\r\n    }\r\n  }\r\n`;\r\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"style/NavStyle\";\r\n\r\nconst Navigation = ({ userObj, setPage }) => {\r\n  const homeClick = () => {\r\n    setPage(1);\r\n  };\r\n  return (\r\n    <Nav>\r\n      <Link to=\"/\" onClick={homeClick}>\r\n        <span>home</span>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n\r\n      <Link to=\"/profile\">\r\n        <span>{userObj?.displayName}</span>\r\n        <img\r\n          src={\r\n            userObj?.photoUrl\r\n              ? userObj.photoUrl\r\n              : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\"\r\n          }\r\n        />\r\n      </Link>\r\n    </Nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { OtherProfile } from \"routes/OthersProfile\";\r\nimport Profile from \"routes/Profile\";\r\nimport styled from \"styled-components\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Demo from \"./Demo\";\r\nimport Navigation from \"./Navigation\";\r\nconst Body = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: aliceblue;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj, userSnapShot }) => {\r\n  const [page, setPage] = useState(1);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <Body>\r\n            {isLoggedIn && <Navigation userObj={userObj} setPage={setPage} />}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home\r\n                  userObj={userObj}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  userSnapShot={userSnapShot}\r\n                  refreshUser={refreshUser}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile\r\n                  userObj={userObj}\r\n                  refreshUser={refreshUser}\r\n                  userSnapShot={userSnapShot}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/:uid\">\r\n                <OtherProfile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </Switch>\r\n          </Body>\r\n        ) : (\r\n          <Body>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </Body>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport { authService } from \"fBase\";\nimport { getUserSnapShot } from \"hooks/userQuery\";\nimport { useEffect, useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyles = createGlobalStyle`\n  font-family:\"Spoqa Han Sans Neo\", \"Spoqa Han Sans JP\", sans-serif;\n  html{\n    scroll-behavior: smooth;\n  }\n  body{\n    background-color: #F0F8FF;\n  }\n    a {\n      text-decoration: none;\n      color:inherit;\n    }\n`;\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [userSnapShot, setUserSnapShot] = useState();\n  useEffect(async () => {\n    setUserSnapShot(await getUserSnapShot(userObj));\n  }, [userObj]);\n\n  useEffect(async () => {\n    onAuthStateChanged(authService, async (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          photoUrl: user.photoURL\n            ? user.photoURL\n            : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\n          displayName: user.displayName\n            ? user.displayName\n            : user.email.split(\"@\")[0],\n        });\n        setIsLoggedIn(true);\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = async () => {\n    const user = await authService.currentUser;\n    if (user) {\n      setUserObj({\n        uid: user.uid,\n        photoUrl: user.photoURL\n          ? user.photoURL\n          : \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/7r5X/image/9djEiPBPMLu_IvCYyvRPwmZkM1g.jpg\",\n        displayName: user.displayName\n          ? user.displayName\n          : user.email.split(\"@\")[0],\n      });\n    } else {\n      setUserObj(null);\n    }\n    setUserSnapShot(await getUserSnapShot(userObj));\n  };\n  return (\n    <>\n      <GlobalStyles />\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          isLoggedIn={isLoggedIn}\n          userSnapShot={userSnapShot}\n        />\n      ) : (\n        <span>Loading...</span>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n"],"sourceRoot":""}